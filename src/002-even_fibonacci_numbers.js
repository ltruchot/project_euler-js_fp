/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

// mine
const pipe = (...fns) => x => fns.reduce((v, f) => f(v), x);
const makeGetLast = n => arr => arr[arr.length - n];
const getLast = makeGetLast(1);
const getPrev = makeGetLast(2);
const keepEven = arr => arr.filter(n => n % 2 === 0);
const sum = arr => arr.reduce((a, c) => a + c, 0);
const getFibonacci = limit => {
  const suite = [1, 2];
  while (getLast(suite) + getPrev(suite) < limit) {
    suite.push(getLast(suite) + getPrev(suite));
  }

  return suite;
};
export const evenFibonnacciNumbers = pipe(
  getFibonacci,
  keepEven,
  sum
);

// best
